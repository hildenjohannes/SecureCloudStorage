var _user$project$State$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$websocket$WebSocket$listen, 'ws://localhost:5000/ws', _user$project$Types$Message),
			_1: {
				ctor: '::',
				_0: _user$project$Ports$encrypted(_user$project$Types$Encrypted),
				_1: {
					ctor: '::',
					_0: _user$project$Ports$decrypted(_user$project$Types$Decrypted),
					_1: {
						ctor: '::',
						_0: _user$project$Ports$fileRead(_user$project$Types$FileRead),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$State$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ShowLogin':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{view: _user$project$Types$LoginView}),
					{ctor: '[]'});
			case 'ShowTeam':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{view: _user$project$Types$TeamView}),
					{ctor: '[]'});
			case 'FileSelected':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{
						ctor: '::',
						_0: _user$project$Ports$fileSelected(model.inputId),
						_1: {ctor: '[]'}
					});
			case 'FileRead':
				var _p1 = _p0._0;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{filename: _p1.filename, content: _p1.content}),
					{
						ctor: '::',
						_0: _user$project$Ports$encrypt(model.content),
						_1: {ctor: '[]'}
					});
			case 'Upload':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$websocket$WebSocket$send,
						'ws://localhost:5000/ws',
						A2(
							_elm_lang$core$Basics_ops['++'],
							'upload|',
							A2(
								_elm_lang$core$Basics_ops['++'],
								model.filename,
								A2(_elm_lang$core$Basics_ops['++'], '|', model.encrypted))))
				};
			case 'Encrypted':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{encrypted: _p0._0}),
					{ctor: '[]'});
			case 'Decrypted':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{decrypted: _p0._0}),
					{ctor: '[]'});
			case 'Email':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{email: _p0._0, showFeedback: false}),
					{ctor: '[]'});
			case 'Password':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{password: _p0._0, showFeedback: false}),
					{ctor: '[]'});
			case 'Login':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{showFeedback: true}),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$websocket$WebSocket$send,
							'ws://localhost:5000/ws',
							A2(
								_elm_lang$core$Basics_ops['++'],
								'login|',
								A2(
									_elm_lang$core$Basics_ops['++'],
									model.email,
									A2(_elm_lang$core$Basics_ops['++'], '|', model.password)))),
						_1: {ctor: '[]'}
					});
			default:
				var _p3 = _p0._0;
				var _p2 = _p3;
				if (_p2 === 'True') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{loginMsg: _p3, view: _user$project$Types$TeamView}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{loginMsg: _p3}),
						{ctor: '[]'});
				}
		}
	});
var _user$project$State$init = {
	ctor: '_Tuple2',
	_0: {view: _user$project$Types$LoginView, inputId: 'FileInputId', filename: '', content: '', encrypted: '', decrypted: '', email: '', password: '', loginMsg: '', showFeedback: false},
	_1: _elm_lang$core$Platform_Cmd$none
};
